Source Link:https://www.techgig.com/codegladiators/question/bk01YUVjQjVyeVp5Umh3RkpINHpuamduTk1PeGxzSXhmRmtJS3pSUi8vdnQzS3ErazhkQnJWZkpGTkt0NWVuRQ==/1


Problem Statement

Team G-Revolution needs help with the device. Tyson has heard about 
your skills and called you up to help them shuffle their positions 
in an order such that they would be able to win the maximum number 
of fights. Can you help Tyson and Team G-Revolution?

Input Format
The first line of input consists of the number of test cases, T
The first line of each test case consists of the number of members 
each team can have, N.

The second line of each test case consists of N space-separated integers 
representing the power of beyblades of Team G-Revolution members.

The third line of each test case consists of N space-separated integers 
representing the power of beyblades of opponent team members.

Constraints
1<= T <=100000
1<= N <=100000
0<= Power of Beyblade <= LLONG_MAX 

Output Format
For each test case, print the maximum number of fights Team G-Revolution 
can win if they go to fight in an optimal manner.

Sample TestCase 1
Input
1
10
3 6 7 5 3 5 6 2 9 1 
2 7 0 9 3 6 0 6 2 6 
Output
7

CODE:

testcases = int(input())
for i in range(testcases):
    members = int(input())
    g_revolution = [int(x) for x in input().split() for i in range(1)]
    all_starz = [int(x) for x in input().split() for i in range(1)]
    count = 0
    nc = 0
    g_new=[]
    a_new=[]
    
    g_revolution.sort()
    all_starz.sort()
    print(g_revolution)
    print(all_starz)

    for i in range(members):
        if(g_revolution[i]-all_starz[i]>=1):
            count = count+1
        if(g_revolution[i]-all_starz[i]<1):
            g_new.append(g_revolution[i])
            a_new.append(all_starz[i])
    
    for m in range(len(g_new)):
        if(max(g_new)-min(a_new)>=1):
            nc = nc+1
            g_new.remove(max(g_new))
            a_new.remove(min(a_new))
    
    print(count+nc)


            

            
    
